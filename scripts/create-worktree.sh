#!/bin/bash

# Script to create a new git worktree with Docker environment
# Usage: ./scripts/create-worktree.sh <worktree-name> <branch-name>
#
# Examples:
#   ./scripts/create-worktree.sh feature-blocks feature/block-mapping
#   ./scripts/create-worktree.sh fix-auth bugfix/auth-token
#   ./scripts/create-worktree.sh refactor-sync refactor/sync-engine

set -e  # Exit on error

# Colors for output
CYAN='\033[0;36m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Check arguments
if [ $# -lt 2 ]; then
    echo -e "${RED}Error: Missing arguments${NC}"
    echo ""
    echo "Usage: $0 <worktree-name> <branch-name>"
    echo ""
    echo "Examples:"
    echo "  $0 feature-blocks feature/block-mapping"
    echo "  $0 fix-auth bugfix/auth-token"
    echo "  $0 refactor-sync refactor/sync-engine"
    echo ""
    exit 1
fi

WORKTREE_NAME=$1
BRANCH_NAME=$2

# Sanitize worktree name for filesystem and Docker
WORKTREE_DIR="../notion-wp-${WORKTREE_NAME}"
PROJECT_NAME="notionwp_${WORKTREE_NAME//-/_}"  # Replace hyphens with underscores
SITE_HOST="${WORKTREE_NAME}.localtest.me"
DB_NAME="wp_${WORKTREE_NAME//-/_}"

echo -e "${CYAN}Creating Git Worktree with Docker Environment${NC}"
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""
echo "Worktree Name:    ${WORKTREE_NAME}"
echo "Branch:           ${BRANCH_NAME}"
echo "Directory:        ${WORKTREE_DIR}"
echo "Project Name:     ${PROJECT_NAME}"
echo "Site URL:         http://${SITE_HOST}"
echo "Database:         ${DB_NAME}"
echo ""

# Confirm before proceeding
read -p "$(echo -e ${YELLOW}Continue? [y/N]: ${NC})" -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${RED}Aborted${NC}"
    exit 1
fi

# Step 1: Create git worktree
echo -e "${CYAN}Step 1: Creating git worktree...${NC}"
if [ -d "$WORKTREE_DIR" ]; then
    echo -e "${RED}Error: Directory $WORKTREE_DIR already exists${NC}"
    exit 1
fi

git worktree add "$WORKTREE_DIR" "$BRANCH_NAME"
echo -e "${GREEN}✓ Worktree created${NC}"
echo ""

# Step 2: Create .env file
echo -e "${CYAN}Step 2: Creating .env configuration...${NC}"
cat > "${WORKTREE_DIR}/.env" <<EOF
# Docker environment configuration for worktree: ${WORKTREE_NAME}
# Auto-generated by scripts/create-worktree.sh

# Project isolation (REQUIRED - unique per worktree)
COMPOSE_PROJECT_NAME=${PROJECT_NAME}
WP_SITE_HOST=${SITE_HOST}

# Database configuration
DB_NAME=${DB_NAME}
WP_TABLE_PREFIX=wp_
DB_USER=wp
DB_PASSWORD=wp
DB_ROOT_PASSWORD=root

# External database port (optional - uncomment to enable)
# DB_PORT=3307

# WordPress configuration
WP_VERSION=php8.3-apache
WP_CLI_VERSION=php8.3

# Debug settings
WP_DEBUG=1
WP_DEBUG_LOG=1
WP_DEBUG_DISPLAY=0

# WordPress installation
WP_TITLE="Notion Sync - ${WORKTREE_NAME}"
WP_ADMIN_USER=admin
WP_ADMIN_PASSWORD=admin
WP_ADMIN_EMAIL=admin@example.com
EOF

echo -e "${GREEN}✓ .env file created${NC}"
echo ""

# Step 3: Start Docker environment
echo -e "${CYAN}Step 3: Starting Docker environment...${NC}"
echo -e "${YELLOW}This may take a few minutes on first run...${NC}"
cd "$WORKTREE_DIR"
make up
echo -e "${GREEN}✓ Docker services started${NC}"
echo ""

# Step 4: Install WordPress
echo -e "${CYAN}Step 4: Installing WordPress...${NC}"
sleep 10  # Wait for services to stabilize
make install
echo -e "${GREEN}✓ WordPress installed and plugin activated${NC}"
echo ""

# Success summary
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${GREEN}Worktree created successfully!${NC}"
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""
echo -e "${CYAN}Site Information:${NC}"
echo "  Directory:    ${WORKTREE_DIR}"
echo "  Site URL:     http://${SITE_HOST}"
echo "  Admin URL:    http://${SITE_HOST}/wp-admin"
echo "  Username:     admin"
echo "  Password:     admin"
echo ""
echo -e "${CYAN}Quick Commands:${NC}"
echo "  cd ${WORKTREE_DIR}"
echo "  make status              # View environment info"
echo "  make logs                # View logs"
echo "  make shell               # Get shell access"
echo "  make wp ARGS='...'       # Run WP-CLI commands"
echo ""
echo -e "${CYAN}Open site:${NC}"
echo "  open http://${SITE_HOST}"
echo ""
echo -e "${YELLOW}Note: To stop this worktree's services, run 'make down' from the worktree directory${NC}"
echo ""
