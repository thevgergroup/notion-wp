#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Notion-WP Plugin Pre-commit Hook
# This hook runs linters and formatters before allowing a commit
# It will auto-fix what it can and block commits on failures

echo "Running pre-commit checks..."

# Get list of staged files
STAGED_PHP_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.php$' || true)
STAGED_JS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.[jt]sx\?$' || true)
STAGED_CSS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.(css|scss|sass)$' || true)

# Track if we have any failures
HAS_ERRORS=0

# PHP Linting
if [ -n "$STAGED_PHP_FILES" ]; then
	echo ""
	echo "üìù Checking PHP files..."

	# Run PHP-CS-Fixer (auto-fix)
	echo "  ‚Üí Running PHP-CS-Fixer (auto-fix)..."
	if ! php composer.phar lint:fix:quiet 2>&1 | grep -v "Loaded config" | grep -v "Using cache file"; then
		echo "  ‚úó PHP-CS-Fixer failed"
		HAS_ERRORS=1
	else
		echo "  ‚úì PHP-CS-Fixer passed"
		# Re-add fixed files to staging
		echo "$STAGED_PHP_FILES" | xargs git add
	fi

	# Run PHPCS (check only)
	echo "  ‚Üí Running PHP_CodeSniffer..."
	if ! php composer.phar lint:phpcs:quiet 2>&1 | grep -v "Registering sniffs" | grep -v "Creating file list"; then
		echo "  ‚úó PHPCS found issues"
		HAS_ERRORS=1
	else
		echo "  ‚úì PHPCS passed"
	fi

	# Run PHPStan (static analysis)
	echo "  ‚Üí Running PHPStan..."
	if ! php composer.phar lint:phpstan:quiet 2>&1 | grep -v "Note:"; then
		echo "  ‚úó PHPStan found issues"
		HAS_ERRORS=1
	else
		echo "  ‚úì PHPStan passed"
	fi
fi

# JavaScript/TypeScript Linting
if [ -n "$STAGED_JS_FILES" ]; then
	echo ""
	echo "üìù Checking JavaScript/TypeScript files..."

	# Run ESLint (auto-fix)
	echo "  ‚Üí Running ESLint (auto-fix)..."
	if ! npm run lint:js:fix --silent 2>&1 | grep -v "eslintrc"; then
		echo "  ‚úó ESLint found issues"
		HAS_ERRORS=1
	else
		echo "  ‚úì ESLint passed"
		# Re-add fixed files to staging
		echo "$STAGED_JS_FILES" | xargs git add
	fi

	# Run Prettier (auto-fix)
	echo "  ‚Üí Running Prettier (auto-fix)..."
	echo "$STAGED_JS_FILES" | xargs npx prettier --write --loglevel warn
	echo "$STAGED_JS_FILES" | xargs git add
	echo "  ‚úì Prettier passed"
fi

# CSS/SCSS Linting
if [ -n "$STAGED_CSS_FILES" ]; then
	echo ""
	echo "üìù Checking CSS/SCSS files..."

	# Run Stylelint (auto-fix)
	echo "  ‚Üí Running Stylelint (auto-fix)..."
	if ! npm run lint:css:fix --silent 2>&1; then
		echo "  ‚úó Stylelint found issues"
		HAS_ERRORS=1
	else
		echo "  ‚úì Stylelint passed"
		# Re-add fixed files to staging
		echo "$STAGED_CSS_FILES" | xargs git add
	fi
fi

# Check if any errors occurred
if [ $HAS_ERRORS -ne 0 ]; then
	echo ""
	echo "‚ùå Pre-commit checks failed. Please fix the errors above and try again."
	echo ""
	echo "üí° Tips:"
	echo "  ‚Ä¢ Run 'php composer.phar lint:fix' to auto-fix PHP issues"
	echo "  ‚Ä¢ Run 'npm run lint:fix' to auto-fix JS/CSS issues"
	echo "  ‚Ä¢ Run 'php composer.phar lint' or 'npm run lint' to see detailed errors"
	echo ""
	exit 1
fi

echo ""
echo "‚úÖ All pre-commit checks passed!"
echo ""
exit 0
